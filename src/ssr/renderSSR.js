"use strict";

const path = require("path");

const { ChunkExtractor } = require("@loadable/server");
const { createElement } = require("react");
const { renderToString } = require("react-dom/server.node");

// This is the stats file generated by webpack loadable plugin
const ssrStatsFile = path.join(
  __dirname,
  "../../dist/server/loadable-stats.json"
);
const csrStatsFile = path.join(
  __dirname,
  "../../dist/client/loadable-stats.json"
);
const mainFile = path.join(__dirname, "../../dist/server/main.js");

exports.renderSSR = async function renderSSR({ url }) {
  const context = {};

  clearCachedFiles();
  const nodeExtractor = new ChunkExtractor({
    statsFile: ssrStatsFile,
    entrypoints: ["ssr"],
  });
  const { default: SSR } = nodeExtractor.requireEntrypoint();

  const webExtractor = new ChunkExtractor({
    statsFile: csrStatsFile,
    entrypoints: ["app"],
  });
  const jsx = webExtractor.collectChunks(
    createElement(SSR, {
      url,
      context,
    })
  );

  const html = `
    <!DOCTYPE html>
    <html>
      <head>
      ${webExtractor.getLinkTags()}
      ${webExtractor.getStyleTags()}
      </head>
      <body>
        <div id="root">${renderToString(jsx)}</div>
        ${webExtractor.getScriptTags()}
      </body>
    </html>
  `;

  return {
    html,
    context: context,
  };
};

function clearCachedFiles() {
  const ssrFilesCache = Object.keys(require.cache).filter((name) =>
    name.includes("dist/server")
  );

  for (const ssrFile of ssrFilesCache) {
    delete require.cache[require.resolve(ssrFile)];
  }
}
